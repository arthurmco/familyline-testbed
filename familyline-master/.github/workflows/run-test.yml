name: CI test run

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  LSAN_OPTIONS: suppressions=../test/lsan.supp
  
jobs:
  testjob:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: ['g++-10', 'clang++-11']
        sanitizer: ['none', 'asan', 'ubsan']
    
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Download dependencies
      run: |
         sudo apt -y update
         sudo apt -y install g++-10 clang-11 libglm-dev libglew-dev libsdl2-2.0-0 libsdl2-dev libsdl2-image-2.0-0 libfmt-dev libsdl2-image-dev libyaml-cpp-dev libyaml-cpp0.6 cmake make libcairo2 libcairo2-dev libyaml-0-2 libyaml-dev libpango-1.0-0 guile-2.2-dev libpango1.0-dev libpangocairo-1.0-0 libflatbuffers-dev libflatbuffers1 nlohmann-json3-dev flatbuffers-compiler-dev flatbuffers-compiler libcurlpp-dev libexpected-dev libcurl4-openssl-dev libcurl4 librange-v3-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |        
        if [${{matrix.sanitizer}} == "asan"]
        then
            ASAN_OPTIONS="-DFLINE_DO_CHECK_ASAN=on"
        else
            ASAN_OPTIONS="-DFLINE_DO_CHECK_ASAN=off"
        fi

        if [${{matrix.sanitizer}} == "ubsan"]
        then
            UBSAN_OPTIONS="-DFLINE_DO_CHECK_UBSAN=on"
        else
            UBSAN_OPTIONS="-DFLINE_DO_CHECK_UBSAN=off"
        fi
        
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=${{matrix.compiler}} ${ASAN_OPTIONS} ${UBSAN_OPTIONS} -DFLATC_TARGET="" -DCURL_LIBRARY=libcurl -DFLATBUFFERS_FLATC_EXECUTABLE="/usr/bin/flatc";

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build -t familyline-tests --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: test/familyline-tests
